* ================================================================ *
* See bottom for two reorg JCL templates: non-XLDS vs. XLDS.       *
*                                                                  *
* All DLBL and dataset names are extracted from standard labels.   *
* You only need define a dataset here if no standard label, del/   *
* def proc name doesn't match the DLBL, or the dataset has an AIX. *
*                                                                  *
* One or two lines required below to define dataset reorg parms... *
* Second line is CICS close list and is not needed if del/def proc *
* name matches DLBL name and no AIX's.  Omit sequ# if no 2nd line. *
* See "DFHCSD" (down below) for an example of this situation.      *
*                                                                  *
* First line is as follows:                                        *
*                                                                  *
* Del/Def  S                                                AIX    *
* PROCname Q                 Dataset Name                 PROCname *
* -------- - -------------------------------------------- -------- *
  APAUDIT  1 WIN.AP.AUDIT                                 APAUAIXB
  APAUDIT  2 APAUAIX APAUDIT
  APCVND   1 WIN.AP.COMPANY.VENDOR                        APCAIXB
  APCVND   2 APCPTH APCAI2 APCVND
  APNVEND  1 DAPSCO.AP.NATL.VENDOR                        APNVAIXB
  APNVEND  2 APNVPTH APNVEND
  APOINV   1 WIN.AP.OPEN.INV                              APOINVX
  APOINV   2 APOAIX APOAI2 APOINV
  APPINV   1 WIN.AP.PAID.INV                              APPINVX
  APPINV   2 APPAIX APPAI2 APPAI3 APPINV
  APXCHNG  1 DAPSCO.AP.ONBASE.EXCHANGE                    APXCHGX
  APXCHNG  2 APXCHGT APXCHNG
  ARNCUST  1 DAPSCO.NATL.CUSTOMER                         ARNCPTH
  ARNCUST  2 ARNCPTH ARNCUST
  ARSLSCM  1 WIN.ARSLSCM.FILE                             ARSLSCA
  ARSLSCM  2 ARSLSCA ARSLSCM
  ARSLSC1  1 WIN.ARSLSCM.AIX1
  ARSLSC1  2 ARSLSCA ARSLSCM
  BSTCNTL  1 VSE.BSTCNTL.FILE
  BSTCNTL  2 *BSTCNTL* BSTCNTL
  CCHECK   1 DAPSCO.CASH.CHECK.FILE                       CCHECKX
  CCHECK   2 CCHKPTH CCHKAI2 CCHKAI3 CCHKAI4 CCHKAI6 CCHECK
  CCHKAIX  1 CCHECK.AIX
  CCHKAIX  2 CCHKPTH CCHECK
  CCHKAI2  1 CCHECK.AIX2
  CCHKAI2  2 CCHKAI2 CCHECK
  CCHKAI3  1 CCHECK.AIX3                                  CCHKAI3
  CCHKAI3  2 CCHKAI3 CCHECK
  CCHKAI4  1 CCHECK.AIX4                                  CCHKAI3
  CCHKAI4  2 CCHKAI4 CCHECK
  CCHKAI6  1 CCHECK.AIX6
  CCHKAI6  2 CCHKAI6 CCHECK
  CDEPAIX  1 CDEPOS.AIX
  CDEPAIX  2 CDEPPTH CDEPOS
  CDEPAI2  1 CDEPOS.AIX2
  CDEPAI2  2 CDEPAI2 CDEPOS
  CDEPAI3  1 CDEPOS.AIX3                                  CDEPAI3
  CDEPAI3  2 CDEPAI3 CDEPOS
  CDEPAI4  1 CDEPOS.AIX4                                  CDEPAI3
  CDEPAI4  2 CDEPAI4 CDEPOS
  CDEPAI6  1 CDEPOS.AIX6
  CDEPAI6  2 CDEPAI6 CDEPOS
  CDEPOS   1 DAPSCO.CASH.DEPOSIT.FILE                     CDEPOSX
  CDEPOS   2 CDEPPTH CDEPAI2 CDEPAI3 CDEPAI4 CDEPAI6 CDEPOS
  CMCHECK  1 DAPSCO.CASH.CHECKS.FILE                      CMCHECKX
  CMCHECK  2 CMCKPTH CMCHECK
  CMDEPOS  1 DAPSCO.CASH.DEPOSITS.FILE                    CMDEPOSX
  CMDEPOS  2 CMDPPTH CMDEPOS
  COMASTR  1 DAPSCO.COMASTR.FILE                          COMASTRX
  COMASTR  2 COMASTA COMASTD COMASTI COMASTN COMASTW COMASTR
  DFHCSD     CICS.CSD
  DFHCSDO  1 CICS.VSE.RESOURCE.DATASET
  DFHCSDO  2 DFHCSD
  EDIXREF  1 DAPSCO.EDI.CROSSREF                          EDIXAIX
  EDIXREF  2 EDIXPTH EDIXAIX EDIXREF
  GEOMAST  1 VERTEX.PROD.GEOMAST                          GEOMAIX
  GEOMAST  2 GEOMAIX GEOMAI2 GEOMAST
  GLEXCLH  1 WIN.GL.EXCEL.HEADER.FILE                     GLEXCLA
  GLEXCLH  2 GLEXCLA GLEXCLH
  GLEXCL1  1 WIN.GL.EXCEL.DESCR.AIX
  GLEXCL1  2 GLEXCLA GLEXCLH
  IESCNTL  1 VSE.CONTROL.FILE
  IESCNTL  2 *IESCNTL* IESCNTL
  IESLDUM  1 VSE.LDAP.USER.MAPPING                        IESLDUV
  IESLDUM  2 IESLDUV IESLDUM
  IESLDU1  1 VSE.LDAP.VSE.USER.AIX
  IESLDU1  2 IESLDUV IESLDUM
  LMLNAIX  1 LMLOANS.AIX
  LMLNAIX  2 LMLNAIX LMLOANS
  LMLOANS  1 DAPSCO.LMLOANS.FILE                          LMLNAIXB
  LMLOANS  2 LMLNAIX LMLOANS
  LMOSAIX  1 LMOUTSD.AIX
  LMOSAIX  2 LMOUTSD
  LMOUTSD  1 OUTSIDE.LENDER.BORROW.FILE                   LMOSAIXB
  LMOUTSD  2 LMOUTSD
  PRAUDT   1 WIN.PRAUDT.FILE                              PRAUDTA
  PRAUDT   2 PRAUDTA PRAUDT
  PRAUDT1  1 WIN.PRAUDT.AIX1
  PRAUDT1  2 PRAUDTA PRAUDT
  PRCHEK   1 WIN.PRCHEK.FILE                              PRCHEKA
  PRCHEK   2 PRCHEKA PRCHEK
  PRCHEK1  1 WIN.PRCHEK.AIX1
  PRCHEK1  2 PRCHEKA PRCHEK
  PRHIST   1 WIN.PRHIST.FILE                              PRHISTX
  PRHIST   2 PRHISTA PRHISTB PRHIST2 PRHIST
  PRHISTB  1 WIN.PRHIST.AIXB
  PRHISTB  2 PRHISTA PRHISTB PRHIST2 PRHIST
  PRHIST1  1 WIN.PRHIST.AIX1
  PRHIST1  2 PRHISTA PRHISTB PRHIST2 PRHIST
  PRHIST2  1 WIN.PRHIST.AIX2
  PRHIST2  2 PRHISTA PRHISTB PRHIST2 PRHIST
  PRMAST   1 WIN.PRMAST.FILE                              PRMASTX
  PRMAST   2 PRMASTA PRMAST2 PRMAST
  PRMAST1  1 WIN.PRMAST.AIX1
  PRMAST1  2 PRMASTA PRMAST2 PRMAST
  PRMAST2  1 WIN.PRMAST.AIX2
  PRMAST2  2 PRMASTA PRMAST2 PRMAST
  PSUPAI1  1 DISTRO.PSUPUPL.SUPPLIER.AIX
  PSUPAI1  2 PSUPAI1 PSUPAI2 PSUPUPL
  PSUPAI2  1 DISTRO.PSUPUPL.COMPANY.AIX
  PSUPAI2  2 PSUPAI1 PSUPAI2 PSUPUPL
  PSUPIA1  1 DISTRO.PSUPINV.SUPPLIER.AIX
  PSUPIA1  2 PSUPIA1 PSUPINV
  PSUPINV  1 DISTRO.PREFSUP.INVOICE                       PSUPIAA
  PSUPINV  2 PSUPIA1 PSUPINV
  PSUPUPL  1 DISTRO.PREFSUP.UPLOAD                        PSUPUPLX
  PSUPUPL  2 PSUPAI1 PSUPAI2 PSUPUPL
  SBFDAIX  1 SBF.DAIX.DATASET
  SBFDAIX  2 SBFPATH SBFDATA
  SBFDATA  1 SBF.DATA.DATASET                             SBFPATH
  SBFDATA  2 SBFPATH SBFDATA
  SSCERTF  1 DAPSCO.SSCERTF.FILE                          SSCTPTH
  SSCERTF  2 SSCTPTH SSCERTF
  SSCHCKS  1 DAPSCO.SSCHCKS.FILE                          SSCKPTH
  SSCHCKS  2 SSCKPTH SSCHCKS
  SSCKAIX  1 DAPSCO.SSCHCKS.COMPANY.AIX
  SSCKAIX  2 SSCKPTH SSCHCKS
  SSCTAIX  1 DAPSCO.SSCERTF.OWNER.AIX
  SSCTAIX  2 SSCTPTH SSCERTF
  SSOWAIX  1 DAPSCO.SSOWNER.ALPHA.AIX
  SSOWAIX  2 SSOWPTH SSOWNER
  SSOWNER  1 DAPSCO.SSOWNER.FILE                          SSOWPTH
  SSOWNER  2 SSOWPTH SSOWNER
  SSPAYRC  1 DAPSCO.SSPAYRC.FILE                          SSPAYRS
  SSPAYRC  2 SSPAYRS SSPAYR1 SSPAYRC
  SSPAYR1  1 DAPSCO.SSPAYRC.SERIES.AIX
  SSPAYR1  2 SSPAYRS SSPAYR1 SSPAYRC
  SSTREAS  1 DAPSCO.SSTREAS.FILE                          SSTRESO
  SSTREAS  2 SSTRESO SSTREAS
  SSTRES1  1 DAPSCO.SSTREAS.OWNER.AIX
  SSTRES1  2 SSTRESO SSTREAS
  SYADRRL  1 SYSTEM.ADDRREL.FILE                          SYARAIX
  SYADRRL  2 SYARAIX SYADRRL
  VIPXAIX  1 VIPXREF.AIX
  VIPXAIX  2 VIPXPTH VIPXREF
  VIPXREF  1 DAPSCO.VIPXREF.FILE                          VIPXPTH
  VIPXREF  2 VIPXPTH VIPXREF
  VSTOREM  1 DAPSCO.STOREM.FILE                           VSTOREMX
  VSTOREM  2 VSTRPTH VSTORE2 VSTOREM
  VSTRAIX  1 DAPSCO.STOREM.AIX
  VSTRAIX  2 VSTRPTH VSTORE2 VSTOREM
  VSTRAI2  1 DAPSCO.STOREM.AIX2
  VSTRAI2  2 VSTRPTH VSTORE2 VSTOREM
  VUSERID  1 WIN.USERID.FILE                              VUSEROP
  VUSERID  2 VUSEROP VUSERID
  VUSEROX  1 WIN.USERID.OPID.AIX
  VUSEROX  2 VUSEROP VUSERID
  WSAPVIR  1 WISE.APINV.RECON                             WSAPVIRX
  WSAPVIR  2 WSAPVAI WSAPVIX WSAPVIR
  WSPMTRX  1 WISE.PRICE.MATRIX                            WSPMAIX
  WSPMTRX  2 WSPMPTH WSPMTRX
* ================================================================ *
* THE FOLLOWING TEMPLATE JCL SHOULD UTILIZE THESE SYMBOLICS AND
* KEYWORDS WHICH MAKE THIS TEMPLATE PROGRAMMATICALLY CUSTOMIZABLE:
*
* <DSP>     BECOMES THE JOB DISPOSITION BASED ON REORG MODE
* <DSN>     BECOMES THE DATASET NAME TO BE REORGANIZED
* <CAT>     BECOMES THE ASSOCIATED CATALOG DATASET NAME
* <CLOSE>   BECOMES THE DLBL NAME(S) TO BE CLOSED/OPENED IN CICS
* <DEFPROC> BECOMES THE NAME OF THE REORG DATASET'S DEFINE PROCEDURE
* <AIXPROC> BECOMES THE NAME OF THE REORG DATASET'S AIX DEFINE PROC
*
* *AIXOMIT* IDENTIFIES JCL WHICH IS ONLY REQUIRED FOR AIX HANDLING
* *BSTCNTL* IDENTIFIES JCL WHICH IS ONLY REQUIRED FOR THE BSTCNTL FILE
* *IESCNTL* IDENTIFIES JCL WHICH IS ONLY REQUIRED FOR THE IESCNTL FILE
*
* ------ NON-XLDS REORG JCL TEMPLATE FOLLOWS --------------------- *
JCL * $$ JOB JNM=DAPREORG,DISP=<DSP>,PRI=7,CLASS=7,USER='<DEFPROC>'
JCL * $$ LST LST=SYSLST,DISP=L,CLASS=Z,DEST=*
JCL // JOB    DAPREORG   AUTOMATED MSAM-BASED VSAM FILE REORG
JCL // OPTION NOACANCEL,NOJCANCEL,SCANCEL
JCL // ON     $ABEND OR $CANCEL GOTO NOTIFY
JCL // ON     $RC > 15 GOTO NOTIFY
JCL /* GOTO   STEP03
JCL /. STEP01 - CLOSE DATASET(S) TO CICS (MTPBATCH)
JCL // EXEC   REXX=RXPAUSES,PARM='R,PAUSEF3,PAUSEF4,PAUSEF5'
JCL // EXEC   REXX=RXPAUSES,PARM='R,PAUSEF6,PAUSEF8,PAUSEF9'
JCL // EXEC   DTRIATTN,PARM='MSG FB,DATA=CLOSEBST'         *BSTCNTL*
JCL // EXEC   DTRIATTN,PARM='MSG FB,DATA=CLOSECNTL'        *IESCNTL*
JCL // LIBDEF *,SEARCH=ESP.MKS,TEMP
JCL // EXEC   PROC=CMTCNTL
JCL // EXEC   PGM=MTPBATCH,SIZE=256K
JCL CLOS <CLOSE>
JCL /* EOD
JCL // LIBDEF *,SEARCH=ESP.MKSMBC,TEMP
JCL // EXEC   PROC=MBCCNTL
JCL // EXEC   PGM=MBCBATCH,SIZE=*,OS390
JCL CICS ALL                                               *BSTCNTL*
JCL CICS ALL                                               *IESCNTL*
JCL CLOS <CLOSE>
JCL /* EOD
JCL // SETPARM LRC=$RC
JCL *  STEP01 RC=&LRC
JCL // EXEC   REXX=WAITJOBS,PARM='UP,90,PAUSEF3,PAUSEF4,PAUSEF5'
JCL // EXEC   REXX=WAITJOBS,PARM='UP,90,PAUSEF6,PAUSEF8,PAUSEF9'
JCL    SET    MRCZERO
JCL /. STEP02 - BACKUP DATASET (FAVER2)
JCL // EXEC   PGM=FAVER2,SIZE=AUTO
JCL    OPTION NO_AIX NO_PATH ESTOP=8
JCL    OPEN   DDN=M4RORGO FOR STORE BUFNO=4
JCL    STORE  CAT(<CAT>) -
JCL           DSN(<DSN>)
JCL /* EOD
JCL // SETPARM LRC=$RC
JCL *  STEP02 RC=&LRC
JCL // IF     $RC > 4 THEN
JCL // GOTO   NOTIFY
JCL /. STEP03 - DELETE & DEFINE DATASET (IDCAMS)
JCL // EXEC   PROC=<DEFPROC>
JCL /* EOD
JCL // SETPARM LRC=$RC
JCL *  STEP03 RC=&LRC
JCL // IF     $RC > 0 THEN
JCL // GOTO   NOTIFY
JCL /. STEP04 - RESTORE DATASET (FAVER2)
JCL // EXEC   PGM=FAVER2,SIZE=AUTO
JCL    OPTION NO_DELETE NO_DEFINE ESTOP=8
JCL    OPEN   DDN=M4RORGI FOR LOAD BUFNO=4
JCL    LOAD   DSN(*)
JCL /* EOD
JCL // SETPARM LRC=$RC
JCL *  STEP04 RC=&LRC
JCL // IF     $RC > 4 THEN
JCL // GOTO   NOTIFY
JCL /. STEP05 - DELETE WORK FILE (DELVSAM)
JCL // ON     $ABEND OR $CANCEL GOTO STEP5X
JCL // ON     $RC > 15 GOTO STEP5X
JCL // DLBL   DELETE,'%%DAPSCO.REORG',,VSAM,CAT=COPYCAT
JCL // EXEC   PGM=DELVSAM,SIZE=(DELVSAM,64K),PARM='DD:DELETE'
JCL /* EOD
JCL /. STEP5X
JCL // SETPARM LRC=$RC
JCL *  STEP05 RC=&LRC
JCL /. STEP06 - REDEFINE AIX & PATH (IDCAMS)               *AIXOMIT*
JCL // ON     $ABEND OR $CANCEL GOTO NOTIFY                *AIXOMIT*
JCL // ON     $RC > 15 GOTO NOTIFY                         *AIXOMIT*
JCL // EXEC   PROC=<AIXPROC>                               *AIXOMIT*
JCL /* EOD                                                 *AIXOMIT*
JCL // SETPARM LRC=$RC                                     *AIXOMIT*
JCL *  STEP06 RC=&LRC                                      *AIXOMIT*
JCL // IF     $RC > 0 THEN                                 *AIXOMIT*
JCL // GOTO   NOTIFY                                       *AIXOMIT*
JCL /. STEP07 - OPEN DATASET(S) TO CICS (MTPBATCH)
JCL // EXEC   DTRIATTN,PARM='MSG FB,DATA=OPENBST'          *BSTCNTL*
JCL // EXEC   DTRIATTN,PARM='MSG FB,DATA=OPENCNTL'         *IESCNTL*
JCL // LIBDEF *,SEARCH=ESP.MKS,TEMP
JCL // EXEC   PROC=CMTCNTL
JCL // EXEC   PGM=MTPBATCH,SIZE=256K
JCL OPEN <CLOSE>
JCL /* EOD
JCL // LIBDEF *,SEARCH=ESP.MKSMBC,TEMP
JCL // EXEC   PROC=MBCCNTL
JCL // EXEC   PGM=MBCBATCH,SIZE=*,OS390
JCL CICS ALL                                               *BSTCNTL*
JCL CICS ALL                                               *IESCNTL*
JCL OPEN <CLOSE>
JCL /* EOD
JCL // SETPARM LRC=$RC
JCL *  STEP07 RC=&LRC
JCL // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF3,PAUSEF4,PAUSEF5'
JCL // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF6,PAUSEF8,PAUSEF9'
JCL // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF3,PAUSEF4,PAUSEF5'
JCL // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF6,PAUSEF8,PAUSEF9'
JCL // EXEC   REXX=WAITJOBS,PARM='DN,01,PAUSEF3,PAUSEF4,PAUSEF5'
JCL // EXEC   REXX=WAITJOBS,PARM='DN,01,PAUSEF6,PAUSEF8,PAUSEF9'
JCL    SET    MRCZERO
JCL // GOTO   EXIT
JCL /. NOTIFY
JCL * $NOTIFY UNEXPECTED ERROR OCCURRED IN JOB
JCL // PAUSE  !!! MANUAL INTERVENTION REQUIRED !!!
JCL /. EXIT
JCL /& EOJ
JCL * $$ EOJ
*
* ------ XLDS REORG JCL TEMPLATE FOLLOWS ------------------------- *
JCX * $$ JOB JNM=DAPREORG,DISP=<DSP>,PRI=7,CLASS=7,USER='<DEFPROC>'
JCX * $$ LST LST=SYSLST,DISP=L,CLASS=Z,DEST=*
JCX // JOB    DAPREORG   AUTOMATED SAM-BASED XLDS FILE REORG
JCX // OPTION NOACANCEL,NOJCANCEL,SCANCEL
JCX // ON     $ABEND OR $CANCEL GOTO NOTIFY
JCX // ON     $RC > 15 GOTO NOTIFY
JCX /* GOTO   STEP03
JCX /. STEP01 - CLOSE DATASET(S) TO CICS (MBCBATCH)
JCX // EXEC   REXX=RXPAUSES,PARM='R,PAUSEF3,PAUSEF4,PAUSEF5'
JCX // EXEC   REXX=RXPAUSES,PARM='R,PAUSEF6,PAUSEF8,PAUSEF9'
JCX // LIBDEF *,SEARCH=ESP.MKSMBC,TEMP
JCX // EXEC   PROC=MBCCNTL
JCX // EXEC   PGM=MBCBATCH,SIZE=*,OS390
JCX CLOS <CLOSE>
JCX /* EOD
JCX // SETPARM LRC=$RC
JCX *  STEP01 RC=&LRC
JCX // EXEC   REXX=WAITJOBS,PARM='UP,90,PAUSEF3,PAUSEF4,PAUSEF5'
JCX // EXEC   REXX=WAITJOBS,PARM='UP,90,PAUSEF6,PAUSEF8,PAUSEF9'
JCX    SET    MRCZERO
JCX /. STEP02 - BACKUP DATASET (FAVER2)
JCX // DLBL   COPYOUT,'DAPSCO.DISK.REORG',1,SD
JCX // EXTENT SYS000,BKUP00,1,0,2,50083
JCX // EXTENT SYS001,BKUP01,1,1,2,50083
JCX // EXTENT SYS002,BKUP02,1,2,2,50083
JCX // EXTENT SYS003,BKUP03,1,3,2,50083
JCX // EXTENT SYS004,BKUP04,1,4,2,50083
JCX // EXTENT SYS005,BKUP05,1,5,2,50083
JCX // EXTENT SYS006,BKUP06,1,6,2,50083
JCX // EXTENT SYS007,BKUP07,1,7,2,50083
JCX // EXTENT SYS008,BKUP08,1,8,2,50083
JCX // EXTENT SYS009,BKUP09,1,9,2,50083
JCX // EXTENT SYS010,BKUP10,1,10,2,50083
JCX // EXTENT SYS011,BKUP11,1,11,2,50083
JCX // EXTENT SYS012,BKUP12,1,12,2,50083
JCX // EXTENT SYS013,BKUP13,1,13,2,50083
JCX // EXTENT SYS014,BKUP14,1,14,2,50083
JCX // EXTENT SYS015,BKUP15,1,15,2,50083
JCX // EXTENT SYS016,BKUP16,1,16,2,50083
JCX // EXTENT SYS017,BKUP17,1,17,2,50083
JCX // EXTENT SYS018,BKUP18,1,18,2,50083
JCX // EXTENT SYS019,BKUP19,1,19,2,50083
JCX // EXTENT SYS020,BKUP20,1,20,2,50083
JCX // EXTENT SYS021,BKUP21,1,21,2,50083
JCX // EXTENT SYS022,BKUP22,1,22,2,50083
JCX // EXTENT SYS023,BKUP23,1,23,2,50083
JCX // ASSGN  SYS000,DISK,TEMP,VOL=BKUP00,SHR
JCX // ASSGN  SYS001,DISK,TEMP,VOL=BKUP01,SHR
JCX // ASSGN  SYS002,DISK,TEMP,VOL=BKUP02,SHR
JCX // ASSGN  SYS003,DISK,TEMP,VOL=BKUP03,SHR
JCX // ASSGN  SYS004,DISK,TEMP,VOL=BKUP04,SHR
JCX // ASSGN  SYS005,DISK,TEMP,VOL=BKUP05,SHR
JCX // ASSGN  SYS006,DISK,TEMP,VOL=BKUP06,SHR
JCX // ASSGN  SYS007,DISK,TEMP,VOL=BKUP07,SHR
JCX // ASSGN  SYS008,DISK,TEMP,VOL=BKUP08,SHR
JCX // ASSGN  SYS009,DISK,TEMP,VOL=BKUP09,SHR
JCX // ASSGN  SYS010,DISK,TEMP,VOL=BKUP10,SHR
JCX // ASSGN  SYS011,DISK,TEMP,VOL=BKUP11,SHR
JCX // ASSGN  SYS012,DISK,TEMP,VOL=BKUP12,SHR
JCX // ASSGN  SYS013,DISK,TEMP,VOL=BKUP13,SHR
JCX // ASSGN  SYS014,DISK,TEMP,VOL=BKUP14,SHR
JCX // ASSGN  SYS015,DISK,TEMP,VOL=BKUP15,SHR
JCX // ASSGN  SYS016,DISK,TEMP,VOL=BKUP16,SHR
JCX // ASSGN  SYS017,DISK,TEMP,VOL=BKUP17,SHR
JCX // ASSGN  SYS018,DISK,TEMP,VOL=BKUP18,SHR
JCX // ASSGN  SYS019,DISK,TEMP,VOL=BKUP19,SHR
JCX // ASSGN  SYS020,DISK,TEMP,VOL=BKUP20,SHR
JCX // ASSGN  SYS021,DISK,TEMP,VOL=BKUP21,SHR
JCX // ASSGN  SYS022,DISK,TEMP,VOL=BKUP22,SHR
JCX // ASSGN  SYS023,DISK,TEMP,VOL=BKUP23,SHR
JCX // EXEC   PGM=FAVER2,SIZE=AUTO
JCX    OPTION NO_AIX NO_PATH ESTOP=8
JCX    OPEN   DDN=COPYOUT FOR STORE BUFNO=4
JCX    STORE  CAT(<CAT>) -
JCX           DSN(<DSN>)
JCX /* EOD
JCX // SETPARM LRC=$RC
JCX *  STEP02 RC=&LRC
JCX // IF     $RC > 4 THEN
JCX // GOTO   NOTIFY
JCX /. STEP03 - DELETE & DEFINE DATASET (IDCAMS)
JCX // EXEC   PROC=<DEFPROC>
JCX /* EOD
JCX // SETPARM LRC=$RC
JCX *  STEP03 RC=&LRC
JCX // IF     $RC > 0 THEN
JCX // GOTO   NOTIFY
JCX /. STEP04 - RESTORE DATASET (FAVER2)
JCX // DLBL   COPYIN,'DAPSCO.DISK.REORG',,SD
JCX // EXTENT SYS000,BKUP00,1,0,2,50083
JCX // EXTENT SYS001,BKUP01,1,1,2,50083
JCX // EXTENT SYS002,BKUP02,1,2,2,50083
JCX // EXTENT SYS003,BKUP03,1,3,2,50083
JCX // EXTENT SYS004,BKUP04,1,4,2,50083
JCX // EXTENT SYS005,BKUP05,1,5,2,50083
JCX // EXTENT SYS006,BKUP06,1,6,2,50083
JCX // EXTENT SYS007,BKUP07,1,7,2,50083
JCX // EXTENT SYS008,BKUP08,1,8,2,50083
JCX // EXTENT SYS009,BKUP09,1,9,2,50083
JCX // EXTENT SYS010,BKUP10,1,10,2,50083
JCX // EXTENT SYS011,BKUP11,1,11,2,50083
JCX // EXTENT SYS012,BKUP12,1,12,2,50083
JCX // EXTENT SYS013,BKUP13,1,13,2,50083
JCX // EXTENT SYS014,BKUP14,1,14,2,50083
JCX // EXTENT SYS015,BKUP15,1,15,2,50083
JCX // EXTENT SYS016,BKUP16,1,16,2,50083
JCX // EXTENT SYS017,BKUP17,1,17,2,50083
JCX // EXTENT SYS018,BKUP18,1,18,2,50083
JCX // EXTENT SYS019,BKUP19,1,19,2,50083
JCX // EXTENT SYS020,BKUP20,1,20,2,50083
JCX // EXTENT SYS021,BKUP21,1,21,2,50083
JCX // EXTENT SYS022,BKUP22,1,22,2,50083
JCX // EXTENT SYS023,BKUP23,1,23,2,50083
JCX // ASSGN  SYS000,DISK,TEMP,VOL=BKUP00,SHR
JCX // ASSGN  SYS001,DISK,TEMP,VOL=BKUP01,SHR
JCX // ASSGN  SYS002,DISK,TEMP,VOL=BKUP02,SHR
JCX // ASSGN  SYS003,DISK,TEMP,VOL=BKUP03,SHR
JCX // ASSGN  SYS004,DISK,TEMP,VOL=BKUP04,SHR
JCX // ASSGN  SYS005,DISK,TEMP,VOL=BKUP05,SHR
JCX // ASSGN  SYS006,DISK,TEMP,VOL=BKUP06,SHR
JCX // ASSGN  SYS007,DISK,TEMP,VOL=BKUP07,SHR
JCX // ASSGN  SYS008,DISK,TEMP,VOL=BKUP08,SHR
JCX // ASSGN  SYS009,DISK,TEMP,VOL=BKUP09,SHR
JCX // ASSGN  SYS010,DISK,TEMP,VOL=BKUP10,SHR
JCX // ASSGN  SYS011,DISK,TEMP,VOL=BKUP11,SHR
JCX // ASSGN  SYS012,DISK,TEMP,VOL=BKUP12,SHR
JCX // ASSGN  SYS013,DISK,TEMP,VOL=BKUP13,SHR
JCX // ASSGN  SYS014,DISK,TEMP,VOL=BKUP14,SHR
JCX // ASSGN  SYS015,DISK,TEMP,VOL=BKUP15,SHR
JCX // ASSGN  SYS016,DISK,TEMP,VOL=BKUP16,SHR
JCX // ASSGN  SYS017,DISK,TEMP,VOL=BKUP17,SHR
JCX // ASSGN  SYS018,DISK,TEMP,VOL=BKUP18,SHR
JCX // ASSGN  SYS019,DISK,TEMP,VOL=BKUP19,SHR
JCX // ASSGN  SYS020,DISK,TEMP,VOL=BKUP20,SHR
JCX // ASSGN  SYS021,DISK,TEMP,VOL=BKUP21,SHR
JCX // ASSGN  SYS022,DISK,TEMP,VOL=BKUP22,SHR
JCX // ASSGN  SYS023,DISK,TEMP,VOL=BKUP23,SHR
JCX // EXEC   PGM=FAVER2,SIZE=AUTO
JCX    OPTION NO_DELETE NO_DEFINE ESTOP=8
JCX    OPEN   DDN=COPYIN FOR LOAD BUFNO=4
JCX    LOAD   DSN(*)
JCX /* EOD
JCX // SETPARM LRC=$RC
JCX *  STEP04 RC=&LRC
JCX // IF     $RC > 4 THEN
JCX // GOTO   NOTIFY
JCX /. STEP05 - DELETE WORK FILE (DITTO)
JCX // ON     $ABEND OR $CANCEL GOTO STEP5X
JCX // ON     $RC > 15 GOTO STEP5X
JCX // UPSI   1
JCX // EXEC   PGM=DITTO,SIZE=256K
JCX $$DITTO SET HEADERPG=NO,PRINTLEN=80
JCX $$DITTO PVT INPUT=VBKUP00,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP01,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP02,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP03,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP04,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP05,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP06,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP07,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP08,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP09,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP10,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP11,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP12,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP13,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP14,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP15,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP16,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP17,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP18,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP19,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP20,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP21,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP22,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO PVT INPUT=VBKUP23,SCRATCH=DAPSCO.DISK.REORG
JCX $$DITTO EOJ
JCX /* EOD
JCX /. STEP5X
JCX    SET    MRCZERO
JCX // SETPARM LRC=$RC
JCX *  STEP05 RC=&LRC
JCX /. STEP06 - REDEFINE AIX & PATH (IDCAMS)               *AIXOMIT*
JCX // ON     $ABEND OR $CANCEL GOTO NOTIFY                *AIXOMIT*
JCX // ON     $RC > 15 GOTO NOTIFY                         *AIXOMIT*
JCX // EXEC   PROC=<AIXPROC>                               *AIXOMIT*
JCX /* EOD                                                 *AIXOMIT*
JCX // SETPARM LRC=$RC                                     *AIXOMIT*
JCX *  STEP06 RC=&LRC                                      *AIXOMIT*
JCX // IF     $RC > 0 THEN                                 *AIXOMIT*
JCX // GOTO   NOTIFY                                       *AIXOMIT*
JCX /. STEP07 - OPEN DATASET(S) TO CICS (MBCBATCH)
JCX // LIBDEF *,SEARCH=ESP.MKSMBC,TEMP
JCX // EXEC   PROC=MBCCNTL
JCX // EXEC   PGM=MBCBATCH,SIZE=*,OS390
JCX OPEN <CLOSE>
JCX /* EOD
JCX // SETPARM LRC=$RC
JCX *  STEP07 RC=&LRC
JCX // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF3,PAUSEF4,PAUSEF5'
JCX // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF6,PAUSEF8,PAUSEF9'
JCX // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF3,PAUSEF4,PAUSEF5'
JCX // EXEC   REXX=RXPAUSES,PARM='T,PAUSEF6,PAUSEF8,PAUSEF9'
JCX // EXEC   REXX=WAITJOBS,PARM='DN,01,PAUSEF3,PAUSEF4,PAUSEF5'
JCX // EXEC   REXX=WAITJOBS,PARM='DN,01,PAUSEF6,PAUSEF8,PAUSEF9'
JCX    SET    MRCZERO
JCX // GOTO   EXIT
JCX /. NOTIFY
JCX * $NOTIFY UNEXPECTED ERROR OCCURRED IN JOB
JCX // PAUSE  !!! MANUAL INTERVENTION REQUIRED !!!
JCX /. EXIT
JCX /& EOJ
JCX * $$ EOJ
* ================================================================ *
